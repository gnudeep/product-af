<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include('/jagg/constants.jag');
include('/jagg/util.jag');
var permissionModule = jagg.module("permission");
var modTenant = jagg.module("tenant");
var log = new Log();
jagg.block("application/user/update", {
    initialize:function (data) {

    },
    getInputs:function () {
        return {
            "applicationKey":null
        }
    },

    getOutputs:function (inputs) {
        var hasTenantLevelUserMgtPermission = permissionModule.hasTenantLevelUserMgtPermission();
        if(!hasTenantLevelUserMgtPermission){
            response.sendError(401, "Unauthorized!!! Only Tenant admin has permission to complete this action");
        }
        var currentUser = parse(request.getParameter("currentUser"));
        var allRoles = modTenant.getAllUserDisplayRoles();
        return {
            "hasTenantLevelUserMgtPermission": hasTenantLevelUserMgtPermission,
            "currentUser": currentUser,
            "allRoles": allRoles
        };
    }
});
%>
