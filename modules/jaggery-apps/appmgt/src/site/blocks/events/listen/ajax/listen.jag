<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");
include("/jagg/config_reader.jag");
var log = new Log();
(function () {
    var mod, obj, result,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json");
    if (!jagg.getUser()) {
        print(UNAUTHORIZED_ERROR_RESPONSE);
        return;
    }
    if (action == "listen") {
        mod = jagg.module("events");

        var pageName = request.getParameter("pageName");
        var userName = request.getParameter("userName");
        var appId = request.getParameter("appId");
        var response = {};

        if (appId && userName) {
            var appEvents = mod.listen(appId);
            var userEvents = mod.listen(userName);
            var forkEvents = mod.listen(appId + '.fork.users.' + userName);
            var allEvents = appEvents.concat(userEvents.concat(forkEvents));

            response.retrievedTime = new Date().getTime();
            response.list = allEvents.sort();
            print(response);
        }


    }else {
        throw new Error("Invalid action specified");
    }

}());
%>
